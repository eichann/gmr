.dynamic-header[style="background: url(#{image_url = @current_channel.image.url || "/images/contents/main1.jpg"}); background-size: cover; background-position: 50% 50%;"]
  .dynamic-cover
    .dynamic-container
      .yt-set
        #player
        .controll-box
          #start
            i.fa.fa-play.fa-4x style=("color: white; margin-top: 21px;") 
.container
  .row
    .col-xs-12.col-sm-12.col-md-12
      h1.title
        = @current_channel.name
      .request_message_box
        p.request_message Thank you for your request :)
      - if @current_channel.enable_request
        .form-wrap
          = render :partial => "common/form"
      .contents_box
        h3
          i.fa.fa-bolt style=("font-size: 36px; padding: 0 10px 0 0;") 
          | description
        p
          = br(@current_channel.description)
        - if @current_channel.enable_request
          button.btn.btn-success.create-btn data-target="#edit-channel" data-toggle="modal" 
            i.fa.fa-plus
            | edit
        #edit-channel.modal.fade
          .modal-dialog
            .modal-content
              .modal-header
                button.close aria-label="Close" data-dismiss="modal" type="button" 
                  span aria-hidden="true"  Ã—
                h4.modal-title Edit Channel
              .modal-body
                = form_for @current_channel, html: {class: 'form-horizontal'}, :url => {:controller => :channels, :action => :update} do |f|
                  .form-group
                    label.col-sm-3 Description
                    .col-sm-9
                      = f.text_area :description, placeholder: "about this channel", cols:"30", rows:"10", autofocus:"true",value: "#{@current_channel.description}", class:"form-control"
                  = f.submit "Create", class:"btn btn-success withripple"
            /! /.modal-content
          /! /.modal-dialog
      .form-wrap
        h3
          i.fa.fa-key.fa-fw style=("font-size: 36px; padding: 0 10px 0 0;") 
          | password
        = form_tag("/channels/#{@current_channel.id}/check_password", :method => :post, :id => :form) do
          input#post.request-form name="password" placeholder="channel-password" type="text" /
          input.request-button type="submit" value="confirm" /
  javascript:
     var player;
     num = 0;
     ary = #{@impressions.to_json.html_safe};

     function shuffle(ary) {
      var n = ary.length, t, i;

      while (n) {
        i = Math.floor(Math.random() * n--);
        t = ary[n];
        ary[n] = ary[i];
        ary[i] = t;
      }

      return ary;
     }

     function onYouTubeIframeAPIReady(){
       var event = 'ontouchstart' in window ? 'touchend' : 'click';
       player = new YT.Player('player', {
         height: 200,
         width: 350,
         events: {
           onStateChange: onPlayerStateChange,
           onError: onPlayerError
         }
       });

       $(document).on(event, 'div#start', function(){
         if (#{@all_count} == num) {
           num = 0;
           shuffle(ary)
         };
         player.loadVideoById(ary[num]);
         num += 1
        });
     }

     function onPlayerStateChange(e) {
       if (e.data == YT.PlayerState.ENDED) {
         if (#{@all_count} == num) {
           num = 0;
           shuffle(ary)
         };
         player.loadVideoById(ary[num]);
         num += 1
         player.playVideo();
       }
     }

     function onPlayerError(e) {
       num += 1
       player.loadVideoById(ary[num]);
       num += 1
       player.playVideo();
     };
